---
title: "Coding"
format: html
---

Importing libraries used
```{python}
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
import seaborn as sns
```

Importing Dataset used
```{python}
df = pd.read_csv('pokemon_data.csv')
```

Cleaning Dataset used 
```{python}
df_c = pd.DataFrame(
    # Removing duplicate rows
    df.drop_duplicates()
    # removing empty rows 
    .dropna(how='all')
    # Removing specific columns 
    .drop(columns=[])
    .reset_index(drop=True)
)

# Renaming column titles: replacing _ with spaces and capitalising each word
df_c.columns = df_c.columns.str.replace('_', ' ').str.title()
# Capitalising 'Id' and 'Hp' column title, saving changes
df_c.rename(columns={'Id':'ID', 'Hp':'HP', 'Sp. Attack': 'Special Attack', 'Sp. Defense':'Special Defense'}, inplace=True)
```

## Creating parallel bar plot comparing HP, Attack, Special Attack, Defense, Special Defense, Speed on average across pokemon types. ## 
```{python}
# Creating new dataframe using only columns needed 
df_stats = df_c[['HP', 'Attack', 'Special Attack', 'Defense', 'Special Defense', 'Speed', 'Base Stats', 'Type 1']]

type_order = df_stats['Type 1'].unique()

# Group by 'Type 1' and calculate mean of all stats
plot_df_stats = df_stats.groupby('Type 1').mean(numeric_only=True).reset_index()

# Order by custom type order
plot_df_ordered = plot_df_stats.set_index('Type 1').loc[type_order].reset_index()

overall_averages = plot_df_stats[all_stats].mean()

```

```{python}
# Plotting parallel bar chart to compare stats across types of pokemon
# Stats setup
all_stats = ['HP', 'Attack', 'Special Attack', 'Speed', 'Defense', 'Special Defense']

impact_font = {'fontname':'Impact'}
verdana_font = {'fontname': 'Verdana'}

# Figure setup
fig = plt.figure(figsize=(18, 16))
fig.suptitle('Pokemon Stats by Type', **impact_font, size=25, y=0.76)

# Plotting graphs for individual stats
for i, stat in enumerate(all_stats):  # all_stats is the list of stats to plot
    row = 1 + i // 3
    col = i % 3
    ax = plt.subplot2grid((4, 3), (row, col))
    
    values = plot_df_ordered.set_index('Type 1')[stat]
    
    ax.barh(type_order, values, color='#FAAA6D')
    ax.set_title(f'{stat}', fontsize=15, **verdana_font)
    ax.invert_yaxis()
    ax.grid(axis='x', linestyle='--', alpha=0.6)
    ax.axvline(overall_averages[stat], color='#419EAE', linestyle='--', linewidth=1.5)

    # For the first column in each row, show y-ticks with the Pok√©mon types
    if col == 0:  # First column of the row
        ax.set_yticks(range(len(type_order)))
        ax.set_yticklabels(type_order, fontsize=11, **verdana_font)
    
    # For other columns, hide the y-ticks
    else: 
        ax.set_yticks([])

plt.tight_layout()
plt.show()


```

Spider plots of average of each generation of pokemon (1-9)

how stat types change through the generations (do they get stronger?)
